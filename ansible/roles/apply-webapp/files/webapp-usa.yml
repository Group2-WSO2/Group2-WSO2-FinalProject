---
apiVersion: v1
kind: Namespace
metadata:
  name: webapp
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-tls
  namespace: webapp
type: kubernetes.io/tls
data:
  # the data is abbreviated in this example
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZMekNDQkJlZ0F3SUJBZ0lTQkRidnhOaHNxY2h4bnM5eHBUc05KVXQ0TUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNVEV5TWpFeE5qRTRORGxhRncweU1qQXpNakV4TmpFNE5EaGFNQ0F4SGpBY0JnTlZCQU1UCkZXZHliM1Z3TW1acGJtRnNjSEp2YW1WamRDNXRiRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBTTZEMVlZOHdENnRSTzlJejNoZG1sNlpGZ1IxS2JMNTA5cDhLbWhnTXFudThFdVlXbFlRNkhwNApmckptbjZxNUZnSWxUZlhoY0lJUnlPckRWeXIwRTh5a1NVYWVDQjNKck5qa0tYV3B3aXplN2N4QWhTbVVzYTVYCjRWR2pNRkxGanIyaUF5SWlueS9WMXQ5UWlhb2Z6Mk9CZm9pZEJSdGwwb25Vd1ZvQTJYSzZGZkxnTnZGS0dZd0MKM1I0bmhNcTlFUitMMExlMUN2aWIxUE5veVBEZHpjdExrRWJUQzVPQ0IxYW9VbTMrTEVSdG94bFcxWkRvdGdlQwpMaTFYbklncWpSSGJXNC9SZ09pYnVmQm5zeldRL1Z0L3hLS3IwTmFwVnFjVzZDdzBmVGwreVNYOGF4aDdaRzk2ClU0NFZGdGViUm0xV0xpMTZUTktJenI5Z2pkNWFuUjBDQXdFQUFhT0NBazh3Z2dKTE1BNEdBMVVkRHdFQi93UUUKQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJdwpBREFkQmdOVkhRNEVGZ1FVeU1maFhjN1YxVzc1VUQ3RlNrYVBsNnEzL3hrd0h3WURWUjBqQkJnd0ZvQVVGQzZ6CkY3ZFlWc3V1VUFsQTVoK3ZuWXNVd3NZd1ZRWUlLd1lCQlFVSEFRRUVTVEJITUNFR0NDc0dBUVVGQnpBQmhoVm8KZEhSd09pOHZjak11Ynk1c1pXNWpjaTV2Y21jd0lnWUlLd1lCQlFVSE1BS0dGbWgwZEhBNkx5OXlNeTVwTG14bApibU55TG05eVp5OHdJQVlEVlIwUkJCa3dGNElWWjNKdmRYQXlabWx1WVd4d2NtOXFaV04wTG0xc01Fd0dBMVVkCklBUkZNRU13Q0FZR1o0RU1BUUlCTURjR0N5c0dBUVFCZ3Q4VEFRRUJNQ2d3SmdZSUt3WUJCUVVIQWdFV0dtaDAKZEhBNkx5OWpjSE11YkdWMGMyVnVZM0o1Y0hRdWIzSm5NSUlCQXdZS0t3WUJCQUhXZVFJRUFnU0I5QVNCOFFEdgpBSFVBUnFWVjYzWDZrU0F3dGFLSmFmVHpmUkVzUVhTKy9VbTRoYXZ5L0hEK2JVY0FBQUY5M2dDOHBBQUFCQU1BClJqQkVBaUIxenovQU13R2NyQW85WUYyN2FrZ1RSTzdjT2g3T1hjY1ZBVTVDVUdzY2N3SWdWUWZ1SHZrUVRUM28KcitPL0J5WkZPY1A2NnZ1NklVZTMxVkh0bVRvR2dPTUFkZ0JCeU1xeDN5SkdTaERHb1RvSlFvZGVUakdMR3dQcgo2MHZIYVBDUVlwWUc5Z0FBQVgzZUFMNlZBQUFFQXdCSE1FVUNJRUVhS2pFNksxV2crbmxRVVB4RU5yUHVrL3IrCjBKK1F1eHJ4NmIvS25DNUtBaUVBOWtQTCtkKzhVV3F6Z2ZTMUNKdU9Dc3l2ckxWTUpGZkE5ZWRaTjdaNVdKTXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxkZ0lULzFwbjk0S3VPL3hpeCtOd0JxREEzTExFT2ZLYnZZOHQxNgovQWd3V1pOTmFESDcvd0ZWTlJZNFFsZ2ZVTzVTSEE3UWcxS2dwL1krMFB0cmlvNjNHb1I5NDVScjVqUk14bWFCCnZzZTUzblU1U2doeVdDVitNS3MxMWVNRC9ER1JVNU9YbnBONENmcDIrcDJxNWl4ZzQwU3ZPU3FVMDR2MmNKdjIKU1RHVTAzYnJRbEtMYlUwdzlUUlZscHd4ODVZTU9TMC9iWDVnNHVsMENYbndDMGJ4ampZb0pBcmVUN1N2YWtMRQpsdjRBcnVxMmdTUUEwVHpVbGNKT0U4Vjc3VlNmTHpHci9wVTRIQWI2N24wemZlTHZxcWp5dXdjRXlhQkY2RGI5Ckt5TjQzV3JZNnJEZHAyY3dWZDdjVWJrbmNBMHFQS2F4WEJjaWxUTW5pNlJ4VmpzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpBd09UQTBNREF3TURBdwpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTE1Ba0dBMVVFQXhNQ1VqTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzdBaFVvelBhZ2xOTVBFdXlOVlpMRCtJTHhtYVo2UW9pblhTYXF0U3U1eFV5eHI0NXIrWFhJbzljUApSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4CnN4UG5IS3pobSsvYjVEdEZVa1dXcWNGVHpqVElVdTYxcnUyUDNtQnc0cVZVcTdadERwZWxRRFJySzlPOFp1dG0KTkh6NmE0dVBWeW1aK0RBWFhicHliL3VCeGEzU2hsZzlGOGZuQ2J2eEsvZUczTUhhY1YzVVJ1UE1yU1hCaUx4ZwpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHCi9raUZIYUZwcmlWMXV4UE1VZ1AxN1ZHaGk5c1ZBZ01CQUFHamdnRUlNSUlCQkRBT0JnTlZIUThCQWY4RUJBTUMKQVlZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQklHQTFVZEV3RUIvd1FJTUFZQgpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBCkZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHVNRElHQ0NzR0FRVUZCd0VCQkNZd0pEQWlCZ2dyQmdFRkJRY3cKQW9ZV2FIUjBjRG92TDNneExta3ViR1Z1WTNJdWIzSm5MekFuQmdOVkhSOEVJREFlTUJ5Z0dxQVloaFpvZEhSdwpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCCmd0OFRBUUVCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDRnlrNUhQcVAzaFVTRnZOVm5lTEtZWTYxMVRSNlcKUFRObGNsUXRnYURxdyszNElMOWZ6TGR3QUxkdU8vWmVsTjdrSUorbTc0dXlBK2VpdFJZOGtjNjA3VGtDNTN3bAppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6CkNrY2hlQW1DSjhNcXlKdTV6bHp5Wk1qQXZubkFUNDV0UkF4ZWtyc3U5NHNRNGVnZFJDbmJXU0R0WTdraCtCSW0KbEpOWG9CMWxCTUVLSXE0UURVT1hvUmdmZnVEZ2hqZTFXckc5TUwrSGJpc3EveUZPR3dYRDlSaVg4RjZzdzZXNAphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyCnlKTUM2YWxMYkJmT0RBTFp2WUg3bjdkbzFBWmxzNEk5ZDFQNGpua0RyUW94QjNVcVE5aFZsM0xFS1E3M3hGMU8KeUs1R2hERFg4b1ZmR0tGNXUrZGVjSXNINFlhVHc3bVAzR0Z4SlNxdjMrMGxVRkpvaTVMYzVkYTE0OXA5MElkcwpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rCkhsVWpyOGdSc0kzcWZKT1FGeS85cktJSlIwWS84T213dC84b1RXZ3kxbWRlSG1tams3ajFuWXN2QzlKU1E2WnYKTWxkbFRUS0IzemhUaFYxK1hXWXA2cmpkNUpXMXpiVldFa0xOeEU3R0pUaEVVRzNzemdCVkdQN3BTV1RVVHNxWApuTFJid0hPb3E3aEh3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZZRENDQkVpZ0F3SUJBZ0lRUUFGM0lUZlU2VUs0N25hcVBHUUt0ekFOQmdrcWhraUc5dzBCQVFzRkFEQS8KTVNRd0lnWURWUVFLRXh0RWFXZHBkR0ZzSUZOcFoyNWhkSFZ5WlNCVWNuVnpkQ0JEYnk0eEZ6QVZCZ05WQkFNVApEa1JUVkNCU2IyOTBJRU5CSUZnek1CNFhEVEl4TURFeU1ERTVNVFF3TTFvWERUSTBNRGt6TURFNE1UUXdNMW93ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQ3Q2Q1J6OUJRMzg1dWVLMWNvSEllKzNMZmZPSkNNYmp6bVY2QjQ5M1hDCm92NzFhbTcyQUU4bzI5NW9obXhFazdheFkvMFVFbXUvSDlMcU1ac2hmdEV6UExwSTlkMTUzN080L3hMeElacEwKd1lxR2NXbEtabVpzajM0OGNMK3RLU0lHOCtUQTVvQ3U0a3VQdDVsK2xBT2YwMGVYZkpsSUkxUG9PSzVQQ20rRApMdEZKVjR5QWRMYmFMOUE0alhzRGNDRWJkZkl3UFBxUHJ0M2FZNnZyRmsvQ2poRkxmczhMNlArMWR5NzBzbnRLCjRFd1NKUXh3alFNcG9PRlRKT3dUMmU0WnZ4Q3pTb3cvaWFOaFVkNnNod2VVOUdOeDdDN2liMXVZZ2VHSlhEUjUKYkhidk81QmllZWJicEpvdkpzWFFFT0VPM3RrUWpoYjd0L2VvOThmbEFnZVlqellJbGVmaU41WU5ObldlK3c1eQpzUjJidkFQNVNRWFlnZDBGdENyV1FlbXNBWGFWQ2cvWTM5VzlFaDgxTHlnWGJOS1l3YWdKWkhkdVJ6ZTZ6cXhaClhtaWRmM0xXaWNVR1FTaytXVDdkSnZVa3lSR25XcU5NUUI5R29abTFwenBSYm9ZN25uMXlweElGZUZudFBsRjQKRlFzRGo0M1FMd1d5UG50S0hFdHpCUkw4eHVyZ1VCTjhRNU4wczhwMDU0NGZBUWpRTU5SYmNUYTBCN3JCTURCYwpTTGVDTzVpbWZXQ0tvcU1wZ3N5NnZZTUVHNktEQTBHaDFnWHhHOEsyOEtoOGhqdEdxRWdxaU54Mm1uYS9IMnFsClBSbVA2emp6Wk43SUt3MEtLUC8zMitJVlF0UWkwQ2RkNFhuK0dPZHdpSzFPNXRtTE9zYmRKMUZ1Lzd4azlUTkQKVHdJREFRQUJvNElCUmpDQ0FVSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQVFZdwpTd1lJS3dZQkJRVUhBUUVFUHpBOU1Ec0dDQ3NHQVFVRkJ6QUNoaTlvZEhSd09pOHZZWEJ3Y3k1cFpHVnVkSEoxCmMzUXVZMjl0TDNKdmIzUnpMMlJ6ZEhKdmIzUmpZWGd6TG5BM1l6QWZCZ05WSFNNRUdEQVdnQlRFcDdHa2V5eHgKK3R2aFM1QjEvOFFWWUlXSkVEQlVCZ05WSFNBRVRUQkxNQWdHQm1lQkRBRUNBVEEvQmdzckJnRUVBWUxmRXdFQgpBVEF3TUM0R0NDc0dBUVVGQndJQkZpSm9kSFJ3T2k4dlkzQnpMbkp2YjNRdGVERXViR1YwYzJWdVkzSjVjSFF1CmIzSm5NRHdHQTFVZEh3UTFNRE13TWFBdm9DMkdLMmgwZEhBNkx5OWpjbXd1YVdSbGJuUnlkWE4wTG1OdmJTOUUKVTFSU1QwOVVRMEZZTTBOU1RDNWpjbXd3SFFZRFZSME9CQllFRkhtMFdlWjd0dVhrQVhPQUNJaklHbGoyNlp0dQpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFLY3dCc2xtNy9EbExRcnQyTTUxb0dyUytvNDQrL3lRb0RGVkRDCjVXeEN1MitiOUxSUHdrU0lDSFhNNndlYkZHSnVlTjdzSjdvNVhQV2lvVzVXbEhBUVU3Rzc1Sy9Rb3NNckFkU1cKOU1VZ05UUDUyR0UyNEhHTnRMaTFxb0pGbGNEeXFTTW81OWFoeTJjSTJxQkRMS29ia3gvSjN2V3JhVjBUOVZ1RwpXQ0xLVFZYa2NHZHR3bGZGUmpsQno0cFlnMWh0bWY1WDZEWU84QTRqcXYySWw5RGpYQTZVU2JXMUZ6WFNMcjlPCmhlOFk0SVdTNndZN2JDa2pDV0RjUlFKTUVoZzc2ZnNPM3R4RStGaVlydXE5UlVXaGlGMW15djRRNlcrQ3lCRkMKRGZ2cDdPT0dBTjZkRU9NNCtxUjlzZGpvU1lLRUJwc3I2R3RQQVF3NGR5NzUzZWM1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV3QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktvd2dnU21BZ0VBQW9JQkFRRE9nOVdHUE1BK3JVVHYKU005NFhacGVtUllFZFNteStkUGFmQ3BvWURLcDd2QkxtRnBXRU9oNmVINnlacCtxdVJZQ0pVMzE0WENDRWNqcQp3MWNxOUJQTXBFbEduZ2dkeWF6WTVDbDFxY0lzM3UzTVFJVXBsTEd1VitGUm96QlN4WTY5b2dNaUlwOHYxZGJmClVJbXFIODlqZ1g2SW5RVWJaZEtKMU1GYUFObHl1aFh5NERieFNobU1BdDBlSjRUS3ZSRWZpOUMzdFFyNG05VHoKYU1qdzNjM0xTNUJHMHd1VGdnZFdxRkp0L2l4RWJhTVpWdFdRNkxZSGdpNHRWNXlJS28wUjIxdVAwWURvbTdudwpaN00xa1AxYmY4U2lxOURXcVZhbkZ1Z3NOSDA1ZnNrbC9Hc1llMlJ2ZWxPT0ZSYlhtMFp0Vmk0dGVrelNpTTYvCllJM2VXcDBkQWdNQkFBRUNnZ0VCQUtYSHl5Y2hxYW9tNmdtMHgyZjJyQzk0Y09aUEw1UlBYVFF0TE5YeE0zcWIKSnlkb1BFeU84akV1ZlhhMVQwTjdwU0UvMVIrblErd0dYdVdtdmxqcTZ1SUNtQmdxVUpXcENpcHFycVdZQ3hwKwpNeU1lUUVlcTZCL3V5Q0FEQW8zUHJkQ3BPQjYwOEZrMExuUENjV0N5ZkllQ3NwTDBpZDcrbEU2MURpbzBPRnNSCmVSUWRtNWhuczlIZmxLTG9ZdFhTWU9VUU9tSWpraWh2b3VOM3RvNGNmR2YrT09rQVRhcVI3QTZkc0hZZmhvYmQKbEpTVzFBekx0QlVtSTlHWktLUGZpOW5aWjJ4Vjl1NDM0WmhpZ0FZRytSMjNnN3NNdnBVT3dvMTBpYVFuNVNnaQpjSzV2UWZ4VllUTEtBNDJ4b28rZlRWNE1SdXVidHMxaDloSmcvWVBLVEVFQ2dZRUE5VHNyMlhxQXBCajJzTTMrCnNTbUkxNHgrUzZvdVpmWnBVcXJDbUtZcjFHM05JUU0wQXcxZGRpUnZsVzltTCtkSGppK1lxU0JyLzdINGxYR3AKYVViT29pKzU0MThuY1NhMjlHRUR2bzBscGY5QjVzMEdEQVhMaE5abEtqaVNjdmt2STdxZTlsQTFqbzYwY0IxcQpTc21qQ0FTUGxtdXhvR3lwTElNOWUzSE9pZWtDZ1lFQTE1VnMxaHlHc2p6TGJIYktYb1lPT2t3Y1loZi9iOFBMCitkaDhMTzlpZGhHUDFMNU9kL2h5Y3dGQzM2NGpyM00xN1pYVHFLR1RsbjhrQW1lRGNrak5tU1cwSFZwYjc4dngKWGFaK1pVRWplWVFvd3JMelg1MG5aVFNGRHAzbGVmSHpldkhhQ3diYVFxUlUyWVpPS3JFcWhpK1ZJODBGY0I5VgpGMzUzRHo5aHhSVUNnWUVBbUxPOHpWSjcwakw5UWdFenJFdkp1emJ2MmR2aHdub2JBVy8xZHFwYXRvK2M0UWFtCmw1UDE4OEFpZjNIN3RxNlVueFJDUW1ZKytkeHZoMWRjZjRLbzN0TkxOQ3NuVzAwWk5ibEhaSnR0cXh6MGcyeDkKYkhVYlV0OVI1V1dPdytzb2tGMy82Qzd2K3BJZ0I0UTVrTkpZSTREN2pGWUpLSFVoTHVlV0hFMDBxQ2tDZ1lFQQpqdmZUYzdMN1NOeTBjenZjUFE5ZUJCOVJlMlE2ekIzbStjd3RuWWNybnUxS20yV1JtRkkxWkR0ajQvOFNQMXFDCld3dFBrTGVHcnZtbUljb1FEQXhuL0xaYVdsVUFQMmphcXFhdGorekEzK2RiT0xPQVh0cFRzL1ErZ1ZFSlMvTysKNnJ2VlJCYkpUQVM3R0g3Tys5VCtSSHJ0eHc1Q0d2ZE1jUVkzWXU4L29Ya0NnWUVBeWRiNFdNTUFNaUNOVHliRAo4Nkt4b1RzVENSUVNVTWFodmIwZVkwV3hsVHFDT0YxdzJDRFFxV3JCZklKQXVlNSt5Q2dEVWVob0F6ZXRIRjNKCllBeFg2M0R0NEpoWkFmRGRBZDlnN2ZhdEdBTEo4emR4ejU3alJvaGQ2b2RjaTh2N25TMEVxSEN6eFpNNFBsVGgKUTFaMU1NQkZ3UGUrWU9WU0ZDb1FmNTNVcG1VPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapp-ingress
  namespace: webapp
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: "www.group2finalproject.ml"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-service
                port:
                  number: 8000
    - host: "group2finalproject.ml"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-service
                port:
                  number: 8000
  ingressClassName: nginx

---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  namespace: webapp
spec:
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 31200
      protocol: TCP
      name: serive
  type: NodePort
  selector:
    name: webapp-deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  namespace: webapp
  labels:
    name: webapp-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      name: webapp-deployment
  template:
    metadata:
      labels:
        name: webapp-deployment
    spec:
      containers:
        - name: webapp
          image: thilankawijerathne/asset-registry-u:6
          env:
            - name: DATABASE_NAME
              value: "testDBB"
            - name: DATABASE_USERNAME
              value: "terraform"
            - name: DATABASE_PASSWORD
              value: "password"
            - name: DATABASE_HOST
              value: "10.12.200.100"
            - name: DATABASE_PORT
              value: "3306"
            - name: CACHE_HOST
              value: "redis.redis"
            - name: CACHE_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              value: "testpassword"
            - name: CACHE_KEY_PREFIX
              value: "webapp"
            - name: ALLOWED_HOSTS
              value: "*"
            - name: ADMIN_NAME
              value: "superadmin"
            - name: ADMIN_EMAIL
              value: "admin@example.com"
            - name: ADMIN_PASS
              value: "SuperAdminPassword"
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: "500Mi"
            limits:
              cpu: 200m
              memory: "1Gi"
          ports:
            - containerPort: 8000
